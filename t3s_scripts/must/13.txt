W&B disabled.
2023-10-11 00:57:30,610 MainThread INFO: Experiment Name:testing_must_mtsac
2023-10-11 00:57:30,610 MainThread INFO: {
  "env_name": "mt10",
  "env": {
    "reward_scale": 1,
    "obs_norm": false
  },
  "meta_env": {
    "obs_type": "with_goal_and_id"
  },
  "replay_buffer": {
    "size": 1000000.0
  },
  "net": {
    "hidden_shapes": [
      40,
      40,
      40
    ]
  },
  "task_embedding": {
    "em_hidden_shapes": [
      20,
      20,
      20
    ]
  },
  "traj_encoder": {
    "latent_size": 256
  },
  "sparse_training": {
    "pruning_ratio": 0.4
  },
  "general_setting": {
    "discount": 0.99,
    "pretrain_epochs": 0,
    "num_epochs": 1000,
    "epoch_frames": 150,
    "max_episode_frames": 150,
    "generator_lr": 0.0001,
    "batch_size": 1280,
    "min_pool": 10000,
    "success_traj_update_only": true,
    "target_hard_update_period": 1000,
    "use_soft_update": true,
    "tau": 0.005,
    "opt_times": 200,
    "update_end_epoch": 1000,
    "mask_update_interval": 25,
    "eval_episodes": 3,
    "recent_traj_window": 10,
    "sl_optim_times": 5,
    "use_trajectory_info": 0
  },
  "sac": {
    "plr": 0.0003,
    "qlr": 0.0003,
    "reparameterization": true,
    "automatic_entropy_tuning": true,
    "policy_std_reg_weight": 0,
    "policy_mean_reg_weight": 0
  }
}
finish policy net init
mask generator finish initialization
/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Could not seed environment <MTEnv instance>[0m
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
Process Process-2:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-10:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-3:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-8:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-5:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-11:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-7:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-6:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-9:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-4:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 268, in train_worker_process
    next_ob, done, reward, info = cls.take_actions(local_funcs, env_info, c_ob, replay_buffer, index_mapping, mask_this_task, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 149, in take_actions
    out = pf.explore(torch.Tensor( ob ).to(env_info.device).unsqueeze(0),
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 86, in explore
    mean, std, log_std = self.forward(x, neuron_masks, enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
wandb: Tracking run with wandb version 0.15.5
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
2023-10-11 00:58:25,947 MainThread INFO: Finished Pretrain
  0%|          | 0/1000 [00:00<?, ?it/s]Process Process-13:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-18:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-14:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-20:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-15:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-19:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-17:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-21:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-16:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
Process Process-12:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 418, in eval_worker_process
    act = pf.eval_act( torch.Tensor( eval_ob ).to(env_info.device).unsqueeze(0), mask_this_task)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 81, in eval_act
    mean, _, _ = self.forward(x, neuron_masks)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/policies/continuous_policy.py", line 70, in forward
    x = super().forward(x, neuron_masks,enable_mask)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/networks/nets.py", line 106, in forward
    self.base.fcs[idx].weight = layer.weight * neuron_masks[idx-1]
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 799, in __setattr__
    raise TypeError("cannot assign '{}' as parameter '{}' "
TypeError: cannot assign 'torch.FloatTensor' as parameter 'weight' (torch.nn.Parameter or None expected)
/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/algo/rl_algo.py:385: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  value = torch.sum((self.mask_buffer["Policy"][each_task][0] == 0).nonzero().squeeze()).item()
  0%|          | 0/1000 [03:17<?, ?it/s]
sample: [2, 8, 9, 4, 6, 7, 0, 1, 5, 3]
wandb: Waiting for W&B process to finish... (failed 255).
wandb: 
wandb: Run history:
wandb:  save_traj_mod_sum ▁
wandb: task_policy_mask_0 ▁
wandb: task_policy_mask_1 ▁
wandb: task_policy_mask_2 ▁
wandb: task_policy_mask_3 ▁
wandb: task_policy_mask_4 ▁
wandb: task_policy_mask_5 ▁
wandb: task_policy_mask_6 ▁
wandb: task_policy_mask_7 ▁
wandb: task_policy_mask_8 ▁
wandb: task_policy_mask_9 ▁
wandb: 
wandb: Run summary:
wandb:  save_traj_mod_sum 0
wandb: task_policy_mask_0 260
wandb: task_policy_mask_1 346
wandb: task_policy_mask_2 210
wandb: task_policy_mask_3 319
wandb: task_policy_mask_4 314
wandb: task_policy_mask_5 272
wandb: task_policy_mask_6 323
wandb: task_policy_mask_7 279
wandb: task_policy_mask_8 345
wandb: task_policy_mask_9 346
wandb: 
wandb: You can sync this run to the cloud by running:
wandb: wandb sync /lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/wandb/offline-run-20231011_005824-sg3xhzfc
wandb: Find logs at: ./wandb/offline-run-20231011_005824-sg3xhzfc/logs
Traceback (most recent call last):
  File "starter/mt_must_sac.py", line 327, in <module>
    experiment(args)
  File "starter/mt_must_sac.py", line 322, in experiment
    agent.train(env.num_tasks,params,group_name)
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/algo/rl_algo.py", line 415, in train
    training_epoch_info = self.collector.train_one_epoch(
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/DST_RL/./torchrl/collector/para/async_mt.py", line 650, in train_one_epoch
    worker_rst = self.shared_que.get()
  File "<string>", line 2, in get
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/wandb/sdk/wandb_manager.py", line 186, in _teardown
    result = self._service.join()
  File "/lustre04/scratch/qianxi/sparse_training/sep_t3s/venv/lib/python3.8/site-packages/wandb/sdk/service/service.py", line 235, in join
    ret = self._internal_proc.wait()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/subprocess.py", line 1083, in wait
    return self._wait(timeout=timeout)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/subprocess.py", line 1806, in _wait
    (pid, sts) = self._try_wait(0)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Core/python/3.8.10/lib/python3.8/subprocess.py", line 1764, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
