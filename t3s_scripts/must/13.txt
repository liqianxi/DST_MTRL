W&B disabled.
2023-08-11 22:04:15,125 MainThread INFO: Experiment Name:testing_must_mtsac
2023-08-11 22:04:15,125 MainThread INFO: {
  "env_name": "mt10",
  "env": {
    "reward_scale": 1,
    "obs_norm": false
  },
  "meta_env": {
    "obs_type": "with_goal_and_id"
  },
  "replay_buffer": {
    "size": 1000000.0
  },
  "net": {
    "hidden_shapes": [
      10,
      10
    ]
  },
  "task_embedding": {
    "em_hidden_shapes": [
      10,
      10
    ]
  },
  "traj_encoder": {
    "hidden_shapes": [
      10,
      10
    ],
    "latent_size": 64
  },
  "sparse_training": {
    "pruning_ratio": 0.5
  },
  "general_setting": {
    "discount": 0.99,
    "pretrain_epochs": 0,
    "num_epochs": 80,
    "epoch_frames": 150,
    "max_episode_frames": 150,
    "batch_size": 1280,
    "min_pool": 10000,
    "target_hard_update_period": 1000,
    "use_soft_update": true,
    "tau": 0.005,
    "opt_times": 5,
    "mask_update_interval": 2,
    "update_end_epoch": 3750,
    "eval_episodes": 3
  },
  "sac": {
    "plr": 0.0003,
    "qlr": 0.0003,
    "reparameterization": true,
    "automatic_entropy_tuning": true,
    "policy_std_reg_weight": 0,
    "policy_mean_reg_weight": 0
  }
}
finish policy net init
mask generator finish initialization
/scratch/qianxi/t3s/venv/lib/python3.8/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Could not seed environment <MTEnv instance>[0m
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
2023-08-11 22:05:35,837 MainThread INFO: Finished Pretrain
  0%|          | 0/80 [00:00<?, ?it/s]self.update_end_epoch 3750
sample: [2, 8, 9, 4, 6, 7, 0, 1, 5, 3]
replay_buffer._size: [300 300 300 300 300 300 300 300 300 300]
snapshot at best
2023-08-11 22:05:42,122 MainThread INFO: EPOCH:0
2023-08-11 22:05:42,122 MainThread INFO: Time Consumed:6.265643119812012s
2023-08-11 22:05:42,122 MainThread INFO: Total Frames:1500s
/scratch/qianxi/t3s/t3s_code/./torchrl/algo/rl_algo.py:366: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  value = torch.sum((self.mask_buffer["Policy"][each_task][0] == 0).nonzero().squeeze()).item()
  1%|▏         | 1/80 [00:06<09:06,  6.92s/it]------------------------------------  -----------  ----------  ----------  ----------
Name                                  Value
Running_Average_Rewards               1128.40179
Train_Epoch_Reward                    31978.37709
Running_Training_Average_Rewards      3197.83771
Explore_Time                          0.00302
Train___Time                          0.30014
Eval____Time                          5.35189
button-press-topdown-v1_success_rate  0.00000
button-press-topdown-v1_eval_rewards  -53.49494
door-v1_success_rate                  0.00000
door-v1_eval_rewards                  -42.98199
drawer-close-v1_success_rate          0.00000
drawer-close-v1_eval_rewards          -17.36663
drawer-open-v1_success_rate           0.00000
drawer-open-v1_eval_rewards           -24.29533
ped-insert-side-v1_success_rate       0.00000
ped-insert-side-v1_eval_rewards       -20.20838
pick-place-v1_success_rate            0.00000
pick-place-v1_eval_rewards            -20.95804
push-v1_success_rate                  0.00000
push-v1_eval_rewards                  -21.00653
reach-v1_success_rate                 0.00000
reach-v1_eval_rewards                 11538.39632
window-close-v1_success_rate          0.00000
window-close-v1_eval_rewards          -27.10287
window-open-v1_success_rate           0.00000
window-open-v1_eval_rewards           -26.96373
mean_success_rate                     0.00000

Name                                  Mean         Std         Max         Min
Reward_Mean                           23.11877     2.50015     26.00819    19.66016
alpha_0                               0.99910      0.00042     0.99970     0.99850
alpha_1                               0.99910      0.00042     0.99970     0.99850
alpha_2                               0.99910      0.00042     0.99970     0.99850
alpha_3                               0.99910      0.00042     0.99970     0.99850
alpha_4                               0.99910      0.00042     0.99970     0.99850
alpha_5                               0.99910      0.00042     0.99970     0.99850
alpha_6                               0.99910      0.00042     0.99970     0.99850
alpha_7                               0.99910      0.00042     0.99970     0.99850
alpha_8                               0.99910      0.00042     0.99970     0.99850
alpha_9                               0.99910      0.00042     0.99970     0.99850
Alpha_loss                            -0.00401     0.00284     -0.00000    -0.00804
Training/policy_loss                  -2.67833     0.01011     -2.66684    -2.69297
Training/qf1_loss                     8173.29863   1176.96975  9508.09570  6760.15088
Training/qf2_loss                     8173.42402   1176.98334  9508.23145  6760.25684
Training/pf_norm                      0.43343      0.02828     0.46510     0.38996
Training/qf1_norm                     52.98040     5.15163     58.89228    45.83088
Training/qf2_norm                     54.16331     5.31488     60.33039    46.80004
log_std/mean                          -0.00226     0.00068     -0.00130    -0.00322
log_std/std                           0.00132      0.00001     0.00133     0.00131
log_std/max                           -0.00031     0.00058     0.00053     -0.00112
log_std/min                           -0.00444     0.00076     -0.00335    -0.00551
log_probs/mean                        -2.68106     0.01039     -2.66886    -2.69643
log_probs/std                         0.42422      0.00810     0.43079     0.40873
log_probs/max                         -1.34143     0.03279     -1.28153    -1.37733
log_probs/min                         -4.11537     0.68996     -3.58507    -5.41006
mean/mean                             -0.00062     0.00010     -0.00050    -0.00075
mean/std                              0.00206      0.00024     0.00236     0.00170
mean/max                              0.00186      0.00029     0.00222     0.00147
mean/min                              -0.00454     0.00060     -0.00358    -0.00520
------------------------------------  -----------  ----------  ----------  ----------
snapshot at 0
history save at ./log/testing_must_mtsac/mt10/13/model
self.update_end_epoch 3750
sample: [2, 3, 4, 1, 0, 6, 5, 9, 8, 7]
replay_buffer._size: [450 450 450 450 450 450 450 450 450 450]
2023-08-11 22:05:43,086 MainThread INFO: EPOCH:1
2023-08-11 22:05:43,086 MainThread INFO: Time Consumed:0.3099958896636963s
2023-08-11 22:05:43,086 MainThread INFO: Total Frames:3000s
  2%|▎         | 2/80 [00:07<04:01,  3.09s/it]  2%|▎         | 2/80 [00:07<04:50,  3.72s/it]
------------------------------------  -----------  ----------  ----------  ----------
Name                                  Value
Running_Average_Rewards               1128.37251
Train_Epoch_Reward                    43075.41242
Running_Training_Average_Rewards      3752.68948
Explore_Time                          0.00350
Train___Time                          0.30242
Eval____Time                          0.00298
button-press-topdown-v1_success_rate  0.00000
button-press-topdown-v1_eval_rewards  -53.78772
door-v1_success_rate                  0.00000
door-v1_eval_rewards                  -42.98199
drawer-close-v1_success_rate          0.00000
drawer-close-v1_eval_rewards          -17.36663
drawer-open-v1_success_rate           0.00000
drawer-open-v1_eval_rewards           -24.29533
ped-insert-side-v1_success_rate       0.00000
ped-insert-side-v1_eval_rewards       -20.20838
pick-place-v1_success_rate            0.00000
pick-place-v1_eval_rewards            -20.95804
push-v1_success_rate                  0.00000
push-v1_eval_rewards                  -21.00653
reach-v1_success_rate                 0.00000
reach-v1_eval_rewards                 11538.39632
window-close-v1_success_rate          0.00000
window-close-v1_eval_rewards          -27.10287
window-open-v1_success_rate           0.00000
window-open-v1_eval_rewards           -26.96373
mean_success_rate                     0.00000

Name                                  Mean         Std         Max         Min
Reward_Mean                           17.24038     2.15072     21.18494    15.08650
alpha_0                               0.99760      0.00042     0.99820     0.99700
alpha_1                               0.99760      0.00042     0.99820     0.99701
alpha_2                               0.99760      0.00042     0.99820     0.99700
alpha_3                               0.99760      0.00042     0.99820     0.99700
alpha_4                               0.99760      0.00042     0.99820     0.99701
alpha_5                               0.99760      0.00042     0.99820     0.99700
alpha_6                               0.99760      0.00042     0.99820     0.99700
alpha_7                               0.99760      0.00042     0.99820     0.99700
alpha_8                               0.99760      0.00042     0.99820     0.99700
alpha_9                               0.99760      0.00042     0.99820     0.99701
Alpha_loss                            -0.01404     0.00286     -0.01000    -0.01806
Training/policy_loss                  -2.67779     0.01479     -2.65618    -2.69650
Training/qf1_loss                     5314.00029   1193.43623  7544.93115  4094.31885
Training/qf2_loss                     5314.09395   1193.44731  7545.04541  4094.40234
Training/pf_norm                      0.43350      0.05056     0.50219     0.38418
Training/qf1_norm                     40.87567     4.41132     48.97143    36.44567
Training/qf2_norm                     41.66686     4.56550     50.02757    37.08126
log_std/mean                          -0.00466     0.00068     -0.00369    -0.00562
log_std/std                           0.00137      0.00002     0.00140     0.00134
log_std/max                           -0.00229     0.00055     -0.00151    -0.00307
log_std/min                           -0.00712     0.00076     -0.00604    -0.00820
log_probs/mean                        -2.68231     0.01516     -2.66029    -2.70104
log_probs/std                         0.42139      0.00465     0.42857     0.41463
log_probs/max                         -1.35025     0.08253     -1.23804    -1.44259
log_probs/min                         -4.05219     0.63637     -3.60825    -5.30832
mean/mean                             -0.00104     0.00012     -0.00083    -0.00118
mean/std                              0.00247      0.00004     0.00252     0.00242
mean/max                              0.00203      0.00019     0.00227     0.00176
mean/min                              -0.00556     0.00012     -0.00534    -0.00567
------------------------------------  -----------  ----------  ----------  ----------
self.update_end_epoch 3750
start to update mask
task_onehot_batch torch.Size([10, 10])
tmp.shape torch.Size([10, 151, 19])
mask_vector torch.Size([10, 20])
task_binary_masks [tensor([[1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 0., 1., 0., 1., 1.],
        [1., 0., 0., 1., 0., 0., 1., 0., 1., 1.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 0., 1., 0., 1., 1.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 1., 0., 0., 1., 1.],
        [1., 0., 0., 1., 0., 0., 1., 0., 1., 1.]]), tensor([[0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.],
        [0., 1., 0., 0., 1., 1., 1., 0., 1., 0.]])]
normalized_mask tensor([[0.5090, 0.4936, 0.5006, 0.5066, 0.5014, 0.5046, 0.5025, 0.4845, 0.5121,
         0.5126, 0.5006, 0.5071, 0.4952, 0.4978, 0.5096, 0.5068, 0.5186, 0.4853,
         0.5055, 0.5027],
        [0.5111, 0.4917, 0.5034, 0.5047, 0.4997, 0.5031, 0.5037, 0.4853, 0.5114,
         0.5121, 0.5010, 0.5073, 0.4944, 0.5001, 0.5089, 0.5055, 0.5191, 0.4838,
         0.5063, 0.5033],
        [0.5101, 0.4929, 0.5012, 0.5038, 0.4994, 0.5026, 0.5039, 0.4867, 0.5098,
         0.5121, 0.5034, 0.5081, 0.4924, 0.4998, 0.5094, 0.5060, 0.5171, 0.4839,
         0.5061, 0.5017],
        [0.5117, 0.4936, 0.4982, 0.5050, 0.5010, 0.5028, 0.5023, 0.4846, 0.5125,
         0.5122, 0.4991, 0.5060, 0.4932, 0.5000, 0.5090, 0.5062, 0.5187, 0.4837,
         0.5080, 0.5035],
        [0.5104, 0.4930, 0.5009, 0.5042, 0.5002, 0.5031, 0.5036, 0.4842, 0.5121,
         0.5112, 0.5006, 0.5070, 0.4952, 0.4986, 0.5089, 0.5067, 0.5187, 0.4830,
         0.5085, 0.5020],
        [0.5095, 0.4931, 0.5027, 0.5063, 0.5003, 0.5034, 0.5026, 0.4846, 0.5133,
         0.5112, 0.4997, 0.5077, 0.4940, 0.4997, 0.5099, 0.5068, 0.5173, 0.4839,
         0.5076, 0.5003],
        [0.5112, 0.4937, 0.5000, 0.5045, 0.5000, 0.5053, 0.5033, 0.4867, 0.5130,
         0.5110, 0.5020, 0.5062, 0.4910, 0.4995, 0.5101, 0.5048, 0.5178, 0.4849,
         0.5084, 0.5025],
        [0.5111, 0.4942, 0.5022, 0.5047, 0.4994, 0.5043, 0.5032, 0.4844, 0.5124,
         0.5130, 0.5008, 0.5063, 0.4958, 0.4988, 0.5086, 0.5056, 0.5184, 0.4852,
         0.5081, 0.5024],
        [0.5111, 0.4975, 0.5014, 0.5067, 0.5017, 0.5044, 0.5035, 0.4849, 0.5126,
         0.5110, 0.5022, 0.5071, 0.4932, 0.4991, 0.5099, 0.5048, 0.5199, 0.4846,
         0.5071, 0.5022],
        [0.5111, 0.4946, 0.5004, 0.5042, 0.5018, 0.5023, 0.5050, 0.4845, 0.5127,
         0.5123, 0.5021, 0.5060, 0.4935, 0.4999, 0.5098, 0.5058, 0.5182, 0.4852,
         0.5072, 0.5002]], grad_fn=<SigmoidBackward>)
converted_list [[tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 1., 0., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])], [tensor([1., 0., 0., 1., 0., 0., 1., 0., 1., 1.]), tensor([0., 1., 0., 0., 1., 1., 1., 0., 1., 0.])]]
batch_task_probs_masks [tensor([0.5090, 0.4936, 0.5006, 0.5066, 0.5014, 0.5046, 0.5025, 0.4845, 0.5121,
        0.5126, 0.5006, 0.5071, 0.4952, 0.4978, 0.5096, 0.5068, 0.5186, 0.4853,
        0.5055, 0.5027], grad_fn=<UnbindBackward>), tensor([0.5111, 0.4917, 0.5034, 0.5047, 0.4997, 0.5031, 0.5037, 0.4853, 0.5114,
        0.5121, 0.5010, 0.5073, 0.4944, 0.5001, 0.5089, 0.5055, 0.5191, 0.4838,
        0.5063, 0.5033], grad_fn=<UnbindBackward>), tensor([0.5101, 0.4929, 0.5012, 0.5038, 0.4994, 0.5026, 0.5039, 0.4867, 0.5098,
        0.5121, 0.5034, 0.5081, 0.4924, 0.4998, 0.5094, 0.5060, 0.5171, 0.4839,
        0.5061, 0.5017], grad_fn=<UnbindBackward>), tensor([0.5117, 0.4936, 0.4982, 0.5050, 0.5010, 0.5028, 0.5023, 0.4846, 0.5125,
        0.5122, 0.4991, 0.5060, 0.4932, 0.5000, 0.5090, 0.5062, 0.5187, 0.4837,
        0.5080, 0.5035], grad_fn=<UnbindBackward>), tensor([0.5104, 0.4930, 0.5009, 0.5042, 0.5002, 0.5031, 0.5036, 0.4842, 0.5121,
        0.5112, 0.5006, 0.5070, 0.4952, 0.4986, 0.5089, 0.5067, 0.5187, 0.4830,
        0.5085, 0.5020], grad_fn=<UnbindBackward>), tensor([0.5095, 0.4931, 0.5027, 0.5063, 0.5003, 0.5034, 0.5026, 0.4846, 0.5133,
        0.5112, 0.4997, 0.5077, 0.4940, 0.4997, 0.5099, 0.5068, 0.5173, 0.4839,
        0.5076, 0.5003], grad_fn=<UnbindBackward>), tensor([0.5112, 0.4937, 0.5000, 0.5045, 0.5000, 0.5053, 0.5033, 0.4867, 0.5130,
        0.5110, 0.5020, 0.5062, 0.4910, 0.4995, 0.5101, 0.5048, 0.5178, 0.4849,
        0.5084, 0.5025], grad_fn=<UnbindBackward>), tensor([0.5111, 0.4942, 0.5022, 0.5047, 0.4994, 0.5043, 0.5032, 0.4844, 0.5124,
        0.5130, 0.5008, 0.5063, 0.4958, 0.4988, 0.5086, 0.5056, 0.5184, 0.4852,
        0.5081, 0.5024], grad_fn=<UnbindBackward>), tensor([0.5111, 0.4975, 0.5014, 0.5067, 0.5017, 0.5044, 0.5035, 0.4849, 0.5126,
        0.5110, 0.5022, 0.5071, 0.4932, 0.4991, 0.5099, 0.5048, 0.5199, 0.4846,
        0.5071, 0.5022], grad_fn=<UnbindBackward>), tensor([0.5111, 0.4946, 0.5004, 0.5042, 0.5018, 0.5023, 0.5050, 0.4845, 0.5127,
        0.5123, 0.5021, 0.5060, 0.4935, 0.4999, 0.5098, 0.5058, 0.5182, 0.4852,
        0.5072, 0.5002], grad_fn=<UnbindBackward>)]
tmp.shape torch.Size([151, 19])
Process Process-4:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-21:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-17:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-5:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-11:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-8:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-3:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-13:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-10:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-6:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-7:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-15:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-18:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-12:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-14:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-20:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-19:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-16:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 390, in eval_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
Process Process-2:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Process Process-9:
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/collector/para/async_mt.py", line 283, in train_worker_process
    shared_que.put({
  File "<string>", line 2, in put
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/managers.py", line 835, in _callmethod
    kind, result = conn.recv()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 250, in recv
    buf = self._recv_bytes()
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/lib/python3.8/multiprocessing/connection.py", line 383, in _recv
    raise EOFError
EOFError
Traceback (most recent call last):
  File "starter/mt_must_sac.py", line 303, in <module>
    experiment(args)
  File "starter/mt_must_sac.py", line 298, in experiment
    agent.train(env.num_tasks,params)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/algo/rl_algo.py", line 374, in train
    self.update_masks(TASK_SAMPLE_NUM, task_amount, epoch)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/algo/rl_algo.py", line 300, in update_masks
    traj_sim_mtx = self.compute_policy_similarity_matrix(all_task_amount, recent_traj)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/algo/rl_algo.py", line 199, in compute_policy_similarity_matrix
    encoding = self.encode_policy_into_gaussian(self.traj_encoder,
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/algo/rl_algo.py", line 171, in encode_policy_into_gaussian
    latents, _ = network.encode(trajectories)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/networks/trajectory_encoder.py", line 103, in encode
    lstm_latents[trajectory_i] = self.encode_lstm(trajectory)
  File "/scratch/qianxi/t3s/t3s_code/./torchrl/networks/trajectory_encoder.py", line 83, in encode_lstm
    tmp[:, :, :].to(self.device)
IndexError: too many indices for tensor of dimension 2
107 seconds elapsed.
